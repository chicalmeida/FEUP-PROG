#include <iostream>
#include <vector>

using namespace std;

void bubbleSort(vector<int> &v){
    int toCheck = v.size();
    while(toCheck > 0) {
        for (int i = 1; i < toCheck; i ++) {
            if (v.at(i - 1) > v.at(i)) {
                int temp = v.at(i);
                v.at(i) = v.at(i - 1);
                v.at(i - 1) = temp;
            }
        }
        toCheck --;
    }
}

void removeDuplicates(vector<int> &v){
    for (int i = 0; i < v.size(); i ++) {
        for (int j = i + 1; j < v.size(); j++) {
            if (v.at(i) == v.at(j)) {
                for (int k = j + 1; k < v.size(); k ++) {
                    v.at(k - 1) = v.at(k);
                }
                v.resize(v.size() - 1);
                j --;
            }
        }
    }
}

void vectorUnion(const vector<int> &v1, const vector<int> &v2, vector<int> &v3){
    for(int i=0; i<v1.size(); i++){
        v3.push_back(v1[i]);
    }
    for(int i =0; i<v2.size(); i++){
        v3.push_back(v2[i]);
    }
    removeDuplicates(v3);
    bubbleSort(v3);
}

void vectorIntersection(const vector<int> &v1, const vector<int> &v2, vector<int> &v3){
    for(int i=0; i<v1.size(); i++){
        for(int j=0; j<v2.size(); j++){
            if(v1[i]==v2[j]){
                v3.push_back(v1[i]);
            }
        }
    }
    removeDuplicates(v3);
    bubbleSort(v3);
}


int main() {
    vector<int> v1 = {1, 2, 3, 2, 5, 1, 10, 12, 2};
    vector<int> v2 = {1, 2, 10, 15, 17, 22, 12};
    vector<int> v3;
    vector<int> v4;
    vectorUnion(v1,v2,v3);
    vectorIntersection(v1, v2, v4);
    cout<<"v3;"<<endl;
    for(int i=0;i<v3.size(); i++){
        cout<<v3[i]<<endl;
    }
    cout<<"v4:"<<endl;
    for(int i=0;i<v4.size(); i++){
        cout<<v4[i]<<endl;
    }
}